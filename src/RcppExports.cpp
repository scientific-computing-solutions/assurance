// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// fitNegBinData
Rcpp::List fitNegBinData(Rcpp::NumericVector coeff, Rcpp::NumericVector count, Rcpp::NumericVector flag, Rcpp::NumericVector log_lambda, double duration);
RcppExport SEXP _assurance_fitNegBinData(SEXP coeffSEXP, SEXP countSEXP, SEXP flagSEXP, SEXP log_lambdaSEXP, SEXP durationSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type coeff(coeffSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type count(countSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type flag(flagSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type log_lambda(log_lambdaSEXP);
    Rcpp::traits::input_parameter< double >::type duration(durationSEXP);
    rcpp_result_gen = Rcpp::wrap(fitNegBinData(coeff, count, flag, log_lambda, duration));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_assurance_fitNegBinData", (DL_FUNC) &_assurance_fitNegBinData, 5},
    {NULL, NULL, 0}
};

RcppExport void R_init_assurance(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
